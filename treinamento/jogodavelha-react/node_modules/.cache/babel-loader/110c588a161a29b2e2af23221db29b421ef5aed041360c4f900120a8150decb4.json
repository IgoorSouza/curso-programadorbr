{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import Board from'./components/Board';import Menu from'./components/Menu';import GameOver from'./components/GameOver';import casas from'./data';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[starterPlayer,setStarterPlayer]=useState(0);const[currentPlayer,setCurrentPlayer]=useState(0);const[winner,setWinner]=useState(0);const[gameOver,setGameOver]=useState(false);const[pontosJogador1,setPontosJogador1]=useState(0);const[pontosJogador2,setPontosJogador2]=useState(0);const[contador,setContador]=useState(0);function marcar(event){if(event.target.id){if(currentPlayer===0){casas.map(casa=>{if(casa.id===event.target.id)casa.markedPlayer1=true;});event.target.innerHTML=\"<img src=\\\"/assets/images/jogador1.png\\\" alt=\\\"Casa marcada pelo jogador 1\\\"></img>\";setContador(contador+1);setCurrentPlayer(1);}else{casas.map(casa=>{if(casa.id===event.target.id)casa.markedPlayer2=true;});event.target.innerHTML=\"<img src=\\\"/assets/images/jogador2.png\\\" alt=\\\"Casa marcada pelo jogador 2\\\"></img>\";setContador(contador+1);setCurrentPlayer(0);}if(casas[0].markedPlayer1===true&&casas[1].markedPlayer1===true&&casas[2].markedPlayer1===true||casas[0].markedPlayer1===true&&casas[3].markedPlayer1===true&&casas[6].markedPlayer1===true||casas[0].markedPlayer1===true&&casas[4].markedPlayer1===true&&casas[8].markedPlayer1===true||casas[1].markedPlayer1===true&&casas[4].markedPlayer1===true&&casas[7].markedPlayer1===true||casas[2].markedPlayer1===true&&casas[4].markedPlayer1===true&&casas[6].markedPlayer1===true||casas[2].markedPlayer1===true&&casas[5].markedPlayer1===true&&casas[8].markedPlayer1===true||casas[3].markedPlayer1===true&&casas[4].markedPlayer1===true&&casas[5].markedPlayer1===true||casas[0].markedPlayer1===true&&casas[3].markedPlayer1===true&&casas[6].markedPlayer1===true||casas[6].markedPlayer1===true&&casas[7].markedPlayer1===true&&casas[8].markedPlayer1===true){setPontosJogador1(pontosJogador1+1);setContador(0);setCurrentPlayer(0);setStarterPlayer(0);setWinner(0);setGameOver(true);}else if(casas[0].markedPlayer2===true&&casas[1].markedPlayer2===true&&casas[2].markedPlayer2===true||casas[0].markedPlayer2===true&&casas[3].markedPlayer2===true&&casas[6].markedPlayer2===true||casas[0].markedPlayer2===true&&casas[4].markedPlayer2===true&&casas[8].markedPlayer2===true||casas[1].markedPlayer2===true&&casas[4].markedPlayer2===true&&casas[7].markedPlayer2===true||casas[2].markedPlayer2===true&&casas[4].markedPlayer2===true&&casas[6].markedPlayer2===true||casas[2].markedPlayer2===true&&casas[5].markedPlayer2===true&&casas[8].markedPlayer2===true||casas[3].markedPlayer2===true&&casas[4].markedPlayer2===true&&casas[5].markedPlayer2===true||casas[0].markedPlayer2===true&&casas[3].markedPlayer2===true&&casas[6].markedPlayer2===true||casas[6].markedPlayer2===true&&casas[7].markedPlayer2===true&&casas[8].markedPlayer2===true){setPontosJogador2(pontosJogador2+1);setContador(0);setCurrentPlayer(1);setStarterPlayer(1);setWinner(1);setGameOver(true);}else if(contador===8&&gameOver===false){setContador(0);setWinner(2);setGameOver(true);setCurrentPlayer(starterPlayer);}}}function reiniciarPlacar(){setPontosJogador1(0);setPontosJogador2(0);setCurrentPlayer(0);setStarterPlayer(0);}function jogarNovamente(){setGameOver(false);casas.map(casa=>{casa.markedPlayer1=false;casa.markedPlayer2=false;document.getElementById(casa.id).innerHTML=\"\";});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"titulo\",children:\"JOGO DA VELHA\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"container\",children:[/*#__PURE__*/_jsx(Board,{marcar:marcar}),/*#__PURE__*/_jsx(Menu,{pontos:[pontosJogador1,pontosJogador2],reset:reiniciarPlacar,starter:starterPlayer}),/*#__PURE__*/_jsx(GameOver,{show:gameOver,winner:winner,rematch:jogarNovamente})]})]});}export default App;","map":{"version":3,"names":["React","useState","Board","Menu","GameOver","casas","jsx","_jsx","jsxs","_jsxs","App","starterPlayer","setStarterPlayer","currentPlayer","setCurrentPlayer","winner","setWinner","gameOver","setGameOver","pontosJogador1","setPontosJogador1","pontosJogador2","setPontosJogador2","contador","setContador","marcar","event","target","id","map","casa","markedPlayer1","innerHTML","markedPlayer2","reiniciarPlacar","jogarNovamente","document","getElementById","className","children","pontos","reset","starter","show","rematch"],"sources":["C:/Users/tiago/OneDrive/Área de Trabalho/Estudos/curso-programadorbr/treinamento/jogodavelha-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport Board from './components/Board'\nimport Menu from './components/Menu'\nimport GameOver from './components/GameOver';\nimport casas from './data'\n\nfunction App() {\n  const [starterPlayer, setStarterPlayer] = useState(0)\n  const [currentPlayer, setCurrentPlayer] = useState(0)\n  const [winner, setWinner] = useState(0)\n  const [gameOver, setGameOver] = useState(false)\n  const [pontosJogador1, setPontosJogador1] = useState(0)\n  const [pontosJogador2, setPontosJogador2] = useState(0)\n  const [contador, setContador] = useState(0)\n\n  function marcar(event) {\n    if (event.target.id) {\n      if (currentPlayer === 0) {\n        casas.map(casa => {\n          if (casa.id === event.target.id) casa.markedPlayer1 = true\n        })\n        event.target.innerHTML = `<img src=\"/assets/images/jogador1.png\" alt=\"Casa marcada pelo jogador 1\"></img>`\n        setContador(contador + 1)\n        setCurrentPlayer(1)\n      } else {\n        casas.map(casa => {\n          if (casa.id === event.target.id) casa.markedPlayer2 = true\n        })\n        event.target.innerHTML = `<img src=\"/assets/images/jogador2.png\" alt=\"Casa marcada pelo jogador 2\"></img>`\n        setContador(contador + 1)\n        setCurrentPlayer(0) \n      }\n\n      if (\n        (casas[0].markedPlayer1 === true && \n        casas[1].markedPlayer1 === true && \n        casas[2].markedPlayer1 === true) || \n              \n        (casas[0].markedPlayer1 === true && \n        casas[3].markedPlayer1 === true && \n        casas[6].markedPlayer1 === true) || \n            \n        (casas[0].markedPlayer1 === true && \n        casas[4].markedPlayer1 === true && \n        casas[8].markedPlayer1 === true) || \n            \n        (casas[1].markedPlayer1 === true && \n        casas[4].markedPlayer1 === true && \n        casas[7].markedPlayer1 === true) || \n            \n        (casas[2].markedPlayer1 === true && \n        casas[4].markedPlayer1 === true && \n        casas[6].markedPlayer1 === true) || \n            \n        (casas[2].markedPlayer1 === true && \n        casas[5].markedPlayer1 === true && \n        casas[8].markedPlayer1 === true) || \n            \n        (casas[3].markedPlayer1 === true && \n        casas[4].markedPlayer1 === true && \n        casas[5].markedPlayer1 === true) || \n           \n        (casas[0].markedPlayer1 === true && \n        casas[3].markedPlayer1 === true && \n        casas[6].markedPlayer1 === true) || \n            \n        (casas[6].markedPlayer1 === true && \n        casas[7].markedPlayer1 === true && \n        casas[8].markedPlayer1 === true)\n      ) {\n        setPontosJogador1(pontosJogador1 + 1)\n        setContador(0)\n        setCurrentPlayer(0)\n        setStarterPlayer(0)\n        setWinner(0)\n        setGameOver(true)\n      } else if (\n        (casas[0].markedPlayer2 === true && \n        casas[1].markedPlayer2 === true && \n        casas[2].markedPlayer2 === true) || \n                \n        (casas[0].markedPlayer2 === true && \n        casas[3].markedPlayer2 === true && \n        casas[6].markedPlayer2 === true) || \n              \n        (casas[0].markedPlayer2 === true && \n        casas[4].markedPlayer2 === true && \n        casas[8].markedPlayer2 === true) || \n              \n        (casas[1].markedPlayer2 === true && \n        casas[4].markedPlayer2 === true && \n        casas[7].markedPlayer2 === true) || \n              \n        (casas[2].markedPlayer2 === true && \n        casas[4].markedPlayer2 === true && \n        casas[6].markedPlayer2 === true) || \n              \n        (casas[2].markedPlayer2 === true && \n        casas[5].markedPlayer2 === true && \n        casas[8].markedPlayer2 === true) || \n              \n        (casas[3].markedPlayer2 === true && \n        casas[4].markedPlayer2 === true && \n        casas[5].markedPlayer2 === true) || \n              \n        (casas[0].markedPlayer2 === true && \n        casas[3].markedPlayer2 === true && \n        casas[6].markedPlayer2 === true) || \n              \n        (casas[6].markedPlayer2 === true && \n        casas[7].markedPlayer2 === true && \n        casas[8].markedPlayer2 === true)\n      ) {\n        setPontosJogador2(pontosJogador2 + 1)\n        setContador(0)\n        setCurrentPlayer(1)\n        setStarterPlayer(1)\n        setWinner(1)\n        setGameOver(true)\n      } else if (contador === 8 && gameOver === false) {\n        setContador(0)\n        setWinner(2)\n        setGameOver(true)\n        setCurrentPlayer(starterPlayer)\n      }\n    }\n}\n\nfunction reiniciarPlacar() {\n  setPontosJogador1(0)\n  setPontosJogador2(0)\n  setCurrentPlayer(0)\n  setStarterPlayer(0)\n}\n\nfunction jogarNovamente() {\n  setGameOver(false)\n  casas.map(casa => {\n    casa.markedPlayer1 = false\n    casa.markedPlayer2 = false\n    document.getElementById(casa.id).innerHTML = \"\"\n  }) \n}\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"titulo\">JOGO DA VELHA</h1>\n      <div id=\"container\">\n        <Board marcar={marcar}></Board>\n\n        <Menu \n          pontos={[pontosJogador1, pontosJogador2]} \n          reset={reiniciarPlacar}\n          starter={starterPlayer}> \n        </Menu>\n\n        <GameOver \n          show={gameOver} \n          winner={winner} \n          rematch={jogarNovamente}>\n        </GameOver>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}